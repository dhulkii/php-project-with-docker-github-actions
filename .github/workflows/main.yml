name: Deploy New Docker Container

on:
  push:
    branches:
      - master

env:
  SERVER_HOST: ${{ secrets.SERVER_HOST }}
  SERVER_USER: ${{ secrets.SERVER_USER }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  deploy-container:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Check out the repository
        uses: actions/checkout@v3

      # Step 2: Set up the SSH key for server connection
      - name: Set up SSH key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      # Step 3: Add server public key to known_hosts
      - name: Add server public key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      # Step 4: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 5: Get the short Git commit ID
      - name: Get Commit ID
        id: get_commit
        run: echo "commit_id=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # Step 6: SSH into the server and stop/remove old container and prune
      - name: SSH into the server and stop/remove old container
        run: |
          ssh -T -i private_key.pem ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            # Set up environment variables
            export COMMIT_ID=$(git -C /home/ubuntu/innoshop rev-parse --short HEAD)

            # Stop and remove the old container
            docker stop php-app
            docker rm php-app

            # Clean up unused images, containers, and volumes
            docker system prune -af
          EOF

      # Step 7: Build and Push New Docker Image
      - name: Build and Push New Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/php-app:${{ env.commit_id }} -t ${{ secrets.DOCKER_USERNAME }}/php-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/php-app:${{ env.commit_id }}
          docker push ${{ secrets.DOCKER_USERNAME }}/php-app:latest

      # Step 8: SSH into the server and run the new container with the .env file mounted
      - name: Deploy New Container on the Server
        run: |
          ssh -T -i private_key.pem ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            # Run the new container and mount the .env file from the server
            docker run -d \
              --name php-app \
              -p 9000:9000 \
              -v /home/ubuntu/innoshop/.env:/app/.env \
              ${{ secrets.DOCKER_USERNAME }}/php-app:latest
          EOF

      # Step 9: Clean up SSH private key
      - name: Clean up SSH private key
        run: |
          rm -f private_key.pem
        if: ${{ always() }}

      # Step 10: Clean up known_hosts file
      - name: Clean up known_hosts file
        run: |
          rm -f ~/.ssh/known_hosts
        if: ${{ always() }}
